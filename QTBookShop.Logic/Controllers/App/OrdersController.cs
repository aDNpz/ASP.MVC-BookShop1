//@GeneratedCode
namespace QTBookShop.Logic.Controllers.App
{
    using TEntity = Entities.App.Order;
    using TOutModel = Models.App.Order;
    ///
    /// Generated by the generator
    ///
    
    public sealed partial class OrdersController : EntitiesController<TEntity, TOutModel>, Contracts.App.IOrdersAccess
    {
        ///
        /// Generated by the generator
        ///
        static OrdersController()
        {
            ClassConstructing();
            ClassConstructed();
        }
        static partial void ClassConstructing();
        static partial void ClassConstructed();
        
        ///
        /// Generated by the generator
        ///
        public OrdersController()
        {
            Constructing();
            
            Constructed();
        }
        partial void Constructing();
        partial void Constructed();
        ///
        /// Generated by the generator
        ///
        public OrdersController(ControllerObject other)
        : base(other)
        {
            Constructing();
            
            Constructed();
        }
        ///
        /// Generated by the generator
        ///
        internal override TOutModel ToModel(TEntity entity)
        {
            var handled = false;
            TOutModel? result = default;
            
            BeforeToOutModel(entity, ref result, ref handled);
            if (handled == false || result == default)
            {
                result = new TOutModel(entity);
            }
            AfterToOutModel(entity, result);
            return result;
        }
        partial void BeforeToOutModel(TEntity entity, ref TOutModel? result, ref bool handled);
        partial void AfterToOutModel(TEntity entity, TOutModel result);
    }
}
