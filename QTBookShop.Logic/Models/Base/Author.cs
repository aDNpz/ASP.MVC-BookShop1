//@GeneratedCode
namespace QTBookShop.Logic.Models.Base
{
    ///
    /// Generated by the generator
    ///
    public partial class Author
    {
        ///
        /// Generated by the generator
        ///
        static Author()
        {
            ClassConstructing();
            ClassConstructed();
        }
        static partial void ClassConstructing();
        static partial void ClassConstructed();
        
        ///
        /// Generated by the generator
        ///
        public Author()
        {
            Constructing();
            _source = new Entities.Base.Author();
            Constructed();
        }
        partial void Constructing();
        partial void Constructed();
        ///
        /// Generated by the generator
        ///
        internal Author(Entities.Base.Author source)
        {
            Constructing();
            _source = source;
            Constructed();
        }
        
        new internal Entities.Base.Author Source
        {
            get => (Entities.Base.Author)(_source!);
            set => _source = value;
        }
        
        public System.String FirstName
        {
            get => Source.FirstName;
            set => Source.FirstName = value;
        }
        
        public System.String LastName
        {
            get => Source.LastName;
            set => Source.LastName = value;
        }
        ///
        /// Generated by the generator
        ///
        internal void CopyProperties(Entities.Base.Author other)
        {
            bool handled = false;
            BeforeCopyProperties(other, ref handled);
            if (handled == false)
            {
                FirstName = other.FirstName;
                LastName = other.LastName;
                Id = other.Id;
            }
            AfterCopyProperties(other);
        }
        partial void BeforeCopyProperties(Entities.Base.Author other, ref bool handled);
        partial void AfterCopyProperties(Entities.Base.Author other);
        ///
        /// Generated by the generator
        ///
        public void CopyProperties(QTBookShop.Logic.Models.Base.Author other)
        {
            bool handled = false;
            BeforeCopyProperties(other, ref handled);
            if (handled == false)
            {
                FirstName = other.FirstName;
                LastName = other.LastName;
                Id = other.Id;
            }
            AfterCopyProperties(other);
        }
        partial void BeforeCopyProperties(QTBookShop.Logic.Models.Base.Author other, ref bool handled);
        partial void AfterCopyProperties(QTBookShop.Logic.Models.Base.Author other);
        ///
        /// Generated by the generator
        ///
        public override bool Equals(object? obj)
        {
            bool result = false;
            if (obj is Models.Base.Author other)
            {
                result = Id == other.Id;
            }
            return result;
        }
        ///
        /// Generated by the generator
        ///
        public override int GetHashCode()
        {
            return this.CalculateHashCode(FirstName, LastName, Id);
        }
        ///
        /// Generated by the generator
        ///
        public static QTBookShop.Logic.Models.Base.Author Create()
        {
            BeforeCreate();
            var result = new QTBookShop.Logic.Models.Base.Author();
            AfterCreate(result);
            return result;
        }
        ///
        /// Generated by the generator
        ///
        public static QTBookShop.Logic.Models.Base.Author Create(object other)
        {
            BeforeCreate(other);
            var result = new QTBookShop.Logic.Models.Base.Author();
            CommonBase.Extensions.ObjectExtensions.CopyFrom(result, other);
            AfterCreate(result, other);
            return result;
        }
        ///
        /// Generated by the generator
        ///
        public static QTBookShop.Logic.Models.Base.Author Create(QTBookShop.Logic.Models.Base.Author other)
        {
            BeforeCreate(other);
            var result = new QTBookShop.Logic.Models.Base.Author();
            result.CopyProperties(other);
            AfterCreate(result, other);
            return result;
        }
        ///
        /// Generated by the generator
        ///
        public static QTBookShop.Logic.Models.Base.Author Create(Entities.Base.Author other)
        {
            BeforeCreate(other);
            var result = new QTBookShop.Logic.Models.Base.Author();
            result.Source = other;
            AfterCreate(result, other);
            return result;
        }
        static partial void BeforeCreate();
        static partial void AfterCreate(QTBookShop.Logic.Models.Base.Author instance);
        static partial void BeforeCreate(object other);
        static partial void AfterCreate(QTBookShop.Logic.Models.Base.Author instance, object other);
        static partial void BeforeCreate(QTBookShop.Logic.Models.Base.Author other);
        static partial void AfterCreate(QTBookShop.Logic.Models.Base.Author instance, QTBookShop.Logic.Models.Base.Author other);
        static partial void BeforeCreate(Entities.Base.Author other);
        static partial void AfterCreate(QTBookShop.Logic.Models.Base.Author instance, Entities.Base.Author other);
    }
}
